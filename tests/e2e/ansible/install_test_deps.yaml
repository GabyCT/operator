# Install the test dependencies.
#
---
- hosts: all
  become: yes
  tasks:
    - name: Install test dependencies
      package:
        name: "{{ test_pkgs[ansible_distribution | lower] }}"
        state: present
      retries: 3
      delay: 10
    # Install bats from source so that we get the latest features.
    - name: Install bats from sources
      block:
        - shell: command -v bats >/dev/null 2>&1
          register: bats_exist
          ignore_errors: yes
        - block:
            - name: Clone bats repository
              git:
                repo: https://github.com/bats-core/bats-core.git
                dest: bats-core
                force: yes
              retries: 3
              delay: 10
            - name: Install bats
              shell:
                cmd: ./install.sh /usr/local
                chdir: bats-core
            - name: Remove bats sources
              file:
                path: bats-core
                state: absent
          when: bats_exist.rc != 0
    - name: Check kustomize is installed
      shell: command -v kustomize >/dev/null 2>&1
      register: kustomize_exist
      ignore_errors: yes
    - name: Install kustomize
      shell: |
        version=$(curl -s https://api.github.com/repos/kubernetes-sigs/kustomize/releases | grep '"tag_name":' | grep "kustomize" | head -n 1 | cut -d '"' -f 4 | cut -d "/" -f 2)
        arch=$(dpkg --print-architecture)
        tarball="kustomize_${version}_linux_${arch}.tar.gz"
        curl -Lf -o "$tarball" "https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2F${version}/kustomize_${version}_linux_${arch}.tar.gz"
        tar -xvzf "${tarball}" -C /usr/local/bin
        command -v kustomize >/dev/null 2>&1
      args:
        creates: /usr/local/bin/kustomize
      retries: 3
      delay: 10
      when: kustomize_exist.rc != 0
    - block:
      - name: Download Go tarball
        get_url:
          url: https://go.dev/dl/go{{ go_version }}.linux-{{ target_arch }}.tar.gz
          dest: /tmp/go{{ go_version }}.linux-{{ target_arch }}.tar.gz
        retries: 3
        delay: 10
      - name: Extract Go tarball
        unarchive:
          # TODO: use facts
          src: /tmp/go{{ go_version }}.linux-{{ target_arch }}.tar.gz
          creates: /usr/local/go
          dest: /usr/local
          remote_src: yes
      - name: Create link to go binary
        file:
          src: /usr/local/go/bin/go
          dest: /usr/local/bin/go
          state: link
    #
    # Undo the installation.
    #
    - name: Uninstall test dependencies
      tags: undo
      block:
        - name: Uninstall go
          file:
            path: "{{ item }}"
            state: absent
          with_items:
            - /usr/local/bin/go
            - /usr/local/go
            - /usr/local/bin/bats
            - /usr/local/bin/kustomize
